#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.225
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tagomatique.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Tagomatique : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertLibelle(Libelle instance);
    partial void UpdateLibelle(Libelle instance);
    partial void DeleteLibelle(Libelle instance);
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertSignet(Signet instance);
    partial void UpdateSignet(Signet instance);
    partial void DeleteSignet(Signet instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    #endregion
		
		public Tagomatique(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Tagomatique(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Tagomatique(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Tagomatique(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<Infos> Infos
		{
			get
			{
				return this.GetTable<Infos>();
			}
		}
		
		public System.Data.Linq.Table<Libelle> Libelles
		{
			get
			{
				return this.GetTable<Libelle>();
			}
		}
		
		public System.Data.Linq.Table<Media> Medias
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<Signet> Signets
		{
			get
			{
				return this.GetTable<Signet>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Dossier;
		
		private string _Nom;
		
		private string _Chemin;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DossierChanging(System.Guid value);
    partial void OnID_DossierChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnCheminChanging(string value);
    partial void OnCheminChanged();
    #endregion
		
		public Dossier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Dossier", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Dossier
		{
			get
			{
				return this._ID_Dossier;
			}
			set
			{
				if ((this._ID_Dossier != value))
				{
					this.OnID_DossierChanging(value);
					this.SendPropertyChanging();
					this._ID_Dossier = value;
					this.SendPropertyChanged("ID_Dossier");
					this.OnID_DossierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chemin", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Chemin
		{
			get
			{
				return this._Chemin;
			}
			set
			{
				if ((this._Chemin != value))
				{
					this.OnCheminChanging(value);
					this.SendPropertyChanging();
					this._Chemin = value;
					this.SendPropertyChanged("Chemin");
					this.OnCheminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Infos
	{
		
		private string _Version;
		
		public Infos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Libelle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Libelle;
		
		private string _Libelle1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LibelleChanging(System.Guid value);
    partial void OnID_LibelleChanged();
    partial void OnLibelleTexteChanging(string value);
    partial void OnLibelleTexteChanged();
    #endregion
		
		public Libelle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Libelle", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Libelle
		{
			get
			{
				return this._ID_Libelle;
			}
			set
			{
				if ((this._ID_Libelle != value))
				{
					this.OnID_LibelleChanging(value);
					this.SendPropertyChanging();
					this._ID_Libelle = value;
					this.SendPropertyChanged("ID_Libelle");
					this.OnID_LibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Libelle", Storage="_Libelle1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LibelleTexte
		{
			get
			{
				return this._Libelle1;
			}
			set
			{
				if ((this._Libelle1 != value))
				{
					this.OnLibelleTexteChanging(value);
					this.SendPropertyChanging();
					this._Libelle1 = value;
					this.SendPropertyChanged("LibelleTexte");
					this.OnLibelleTexteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Media;
		
		private string _Nom;
		
		private string _RelativeURL;
		
		private System.Guid _ID_Dossier;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MediaChanging(System.Guid value);
    partial void OnID_MediaChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnRelativeURLChanging(string value);
    partial void OnRelativeURLChanged();
    partial void OnID_DossierChanging(System.Guid value);
    partial void OnID_DossierChanged();
    #endregion
		
		public Media()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Media", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Media
		{
			get
			{
				return this._ID_Media;
			}
			set
			{
				if ((this._ID_Media != value))
				{
					this.OnID_MediaChanging(value);
					this.SendPropertyChanging();
					this._ID_Media = value;
					this.SendPropertyChanged("ID_Media");
					this.OnID_MediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeURL", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string RelativeURL
		{
			get
			{
				return this._RelativeURL;
			}
			set
			{
				if ((this._RelativeURL != value))
				{
					this.OnRelativeURLChanging(value);
					this.SendPropertyChanging();
					this._RelativeURL = value;
					this.SendPropertyChanged("RelativeURL");
					this.OnRelativeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Dossier", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID_Dossier
		{
			get
			{
				return this._ID_Dossier;
			}
			set
			{
				if ((this._ID_Dossier != value))
				{
					this.OnID_DossierChanging(value);
					this.SendPropertyChanging();
					this._ID_Dossier = value;
					this.SendPropertyChanged("ID_Dossier");
					this.OnID_DossierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Signet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Media;
		
		private System.Guid _ID_Libelle;
		
		private string _Duree;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MediaChanging(System.Guid value);
    partial void OnID_MediaChanged();
    partial void OnID_LibelleChanging(System.Guid value);
    partial void OnID_LibelleChanged();
    partial void OnDureeChanging(string value);
    partial void OnDureeChanged();
    #endregion
		
		public Signet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Media", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Media
		{
			get
			{
				return this._ID_Media;
			}
			set
			{
				if ((this._ID_Media != value))
				{
					this.OnID_MediaChanging(value);
					this.SendPropertyChanging();
					this._ID_Media = value;
					this.SendPropertyChanged("ID_Media");
					this.OnID_MediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Libelle", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Libelle
		{
			get
			{
				return this._ID_Libelle;
			}
			set
			{
				if ((this._ID_Libelle != value))
				{
					this.OnID_LibelleChanging(value);
					this.SendPropertyChanging();
					this._ID_Libelle = value;
					this.SendPropertyChanged("ID_Libelle");
					this.OnID_LibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duree", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Duree
		{
			get
			{
				return this._Duree;
			}
			set
			{
				if ((this._Duree != value))
				{
					this.OnDureeChanging(value);
					this.SendPropertyChanging();
					this._Duree = value;
					this.SendPropertyChanged("Duree");
					this.OnDureeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Media;
		
		private System.Guid _ID_Libelle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MediaChanging(System.Guid value);
    partial void OnID_MediaChanged();
    partial void OnID_LibelleChanging(System.Guid value);
    partial void OnID_LibelleChanged();
    #endregion
		
		public Tag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Media", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Media
		{
			get
			{
				return this._ID_Media;
			}
			set
			{
				if ((this._ID_Media != value))
				{
					this.OnID_MediaChanging(value);
					this.SendPropertyChanging();
					this._ID_Media = value;
					this.SendPropertyChanged("ID_Media");
					this.OnID_MediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Libelle", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Libelle
		{
			get
			{
				return this._ID_Libelle;
			}
			set
			{
				if ((this._ID_Libelle != value))
				{
					this.OnID_LibelleChanging(value);
					this.SendPropertyChanging();
					this._ID_Libelle = value;
					this.SendPropertyChanged("ID_Libelle");
					this.OnID_LibelleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
