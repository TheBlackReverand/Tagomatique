#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.269
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tagomatique.Data.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\CodePlex\\tagomatique\\Tagomatique\\Tagomatique.sdf")]
	public partial class SQLCompactContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertChapitre(Chapitre instance);
    partial void UpdateChapitre(Chapitre instance);
    partial void DeleteChapitre(Chapitre instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertSignet(Signet instance);
    partial void UpdateSignet(Signet instance);
    partial void DeleteSignet(Signet instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    #endregion
		
		public SQLCompactContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLCompactContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLCompactContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLCompactContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Chapitre> Chapitre
		{
			get
			{
				return this.GetTable<Chapitre>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossier
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<Infos> Infos
		{
			get
			{
				return this.GetTable<Infos>();
			}
		}
		
		public System.Data.Linq.Table<Media> Media
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<Signet> Signet
		{
			get
			{
				return this.GetTable<Signet>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tag
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Chapitre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Chapitre;
		
		private string _Debut;
		
		private string _Fin;
		
		private string _Description;
		
		private System.Guid _FK_ID_Media;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ChapitreChanging(System.Guid value);
    partial void OnID_ChapitreChanged();
    partial void OnDebutChanging(string value);
    partial void OnDebutChanged();
    partial void OnFinChanging(string value);
    partial void OnFinChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFK_ID_MediaChanging(System.Guid value);
    partial void OnFK_ID_MediaChanged();
    #endregion
		
		public Chapitre()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Chapitre", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Chapitre
		{
			get
			{
				return this._ID_Chapitre;
			}
			set
			{
				if ((this._ID_Chapitre != value))
				{
					this.OnID_ChapitreChanging(value);
					this.SendPropertyChanging();
					this._ID_Chapitre = value;
					this.SendPropertyChanged("ID_Chapitre");
					this.OnID_ChapitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debut", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Debut
		{
			get
			{
				return this._Debut;
			}
			set
			{
				if ((this._Debut != value))
				{
					this.OnDebutChanging(value);
					this.SendPropertyChanging();
					this._Debut = value;
					this.SendPropertyChanged("Debut");
					this.OnDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fin", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Fin
		{
			get
			{
				return this._Fin;
			}
			set
			{
				if ((this._Fin != value))
				{
					this.OnFinChanging(value);
					this.SendPropertyChanging();
					this._Fin = value;
					this.SendPropertyChanged("Fin");
					this.OnFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ID_Media", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FK_ID_Media
		{
			get
			{
				return this._FK_ID_Media;
			}
			set
			{
				if ((this._FK_ID_Media != value))
				{
					this.OnFK_ID_MediaChanging(value);
					this.SendPropertyChanging();
					this._FK_ID_Media = value;
					this.SendPropertyChanged("FK_ID_Media");
					this.OnFK_ID_MediaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Dossier;
		
		private string _Nom;
		
		private string _Chemin;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DossierChanging(System.Guid value);
    partial void OnID_DossierChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnCheminChanging(string value);
    partial void OnCheminChanged();
    #endregion
		
		public Dossier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Dossier", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Dossier
		{
			get
			{
				return this._ID_Dossier;
			}
			set
			{
				if ((this._ID_Dossier != value))
				{
					this.OnID_DossierChanging(value);
					this.SendPropertyChanging();
					this._ID_Dossier = value;
					this.SendPropertyChanged("ID_Dossier");
					this.OnID_DossierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chemin", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Chemin
		{
			get
			{
				return this._Chemin;
			}
			set
			{
				if ((this._Chemin != value))
				{
					this.OnCheminChanging(value);
					this.SendPropertyChanging();
					this._Chemin = value;
					this.SendPropertyChanged("Chemin");
					this.OnCheminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Infos
	{
		
		private string _Version;
		
		public Infos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Media;
		
		private string _Nom;
		
		private string _RelativeURL;
		
		private System.Guid _FK_ID_Dossier;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MediaChanging(System.Guid value);
    partial void OnID_MediaChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnRelativeURLChanging(string value);
    partial void OnRelativeURLChanged();
    partial void OnFK_ID_DossierChanging(System.Guid value);
    partial void OnFK_ID_DossierChanged();
    #endregion
		
		public Media()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Media", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Media
		{
			get
			{
				return this._ID_Media;
			}
			set
			{
				if ((this._ID_Media != value))
				{
					this.OnID_MediaChanging(value);
					this.SendPropertyChanging();
					this._ID_Media = value;
					this.SendPropertyChanged("ID_Media");
					this.OnID_MediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeURL", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string RelativeURL
		{
			get
			{
				return this._RelativeURL;
			}
			set
			{
				if ((this._RelativeURL != value))
				{
					this.OnRelativeURLChanging(value);
					this.SendPropertyChanging();
					this._RelativeURL = value;
					this.SendPropertyChanged("RelativeURL");
					this.OnRelativeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ID_Dossier", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FK_ID_Dossier
		{
			get
			{
				return this._FK_ID_Dossier;
			}
			set
			{
				if ((this._FK_ID_Dossier != value))
				{
					this.OnFK_ID_DossierChanging(value);
					this.SendPropertyChanging();
					this._FK_ID_Dossier = value;
					this.SendPropertyChanged("FK_ID_Dossier");
					this.OnFK_ID_DossierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Signet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Signet;
		
		private string _Duree;
		
		private string _Libelle;
		
		private System.Guid _FK_ID_Media;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SignetChanging(System.Guid value);
    partial void OnID_SignetChanged();
    partial void OnDureeChanging(string value);
    partial void OnDureeChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnFK_ID_MediaChanging(System.Guid value);
    partial void OnFK_ID_MediaChanged();
    #endregion
		
		public Signet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Signet", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Signet
		{
			get
			{
				return this._ID_Signet;
			}
			set
			{
				if ((this._ID_Signet != value))
				{
					this.OnID_SignetChanging(value);
					this.SendPropertyChanging();
					this._ID_Signet = value;
					this.SendPropertyChanged("ID_Signet");
					this.OnID_SignetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duree", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Duree
		{
			get
			{
				return this._Duree;
			}
			set
			{
				if ((this._Duree != value))
				{
					this.OnDureeChanging(value);
					this.SendPropertyChanging();
					this._Duree = value;
					this.SendPropertyChanged("Duree");
					this.OnDureeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ID_Media", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FK_ID_Media
		{
			get
			{
				return this._FK_ID_Media;
			}
			set
			{
				if ((this._FK_ID_Media != value))
				{
					this.OnFK_ID_MediaChanging(value);
					this.SendPropertyChanging();
					this._FK_ID_Media = value;
					this.SendPropertyChanged("FK_ID_Media");
					this.OnFK_ID_MediaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Tag;
		
		private string _Libelle;
		
		private System.Nullable<System.Guid> _FK_ID_Media;
		
		private System.Nullable<System.Guid> _FK_ID_Chapitre;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TagChanging(System.Guid value);
    partial void OnID_TagChanged();
    partial void OnLibelleChanging(string value);
    partial void OnLibelleChanged();
    partial void OnFK_ID_MediaChanging(System.Nullable<System.Guid> value);
    partial void OnFK_ID_MediaChanged();
    partial void OnFK_ID_ChapitreChanging(System.Nullable<System.Guid> value);
    partial void OnFK_ID_ChapitreChanged();
    #endregion
		
		public Tag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tag", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Tag
		{
			get
			{
				return this._ID_Tag;
			}
			set
			{
				if ((this._ID_Tag != value))
				{
					this.OnID_TagChanging(value);
					this.SendPropertyChanging();
					this._ID_Tag = value;
					this.SendPropertyChanged("ID_Tag");
					this.OnID_TagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Libelle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Libelle
		{
			get
			{
				return this._Libelle;
			}
			set
			{
				if ((this._Libelle != value))
				{
					this.OnLibelleChanging(value);
					this.SendPropertyChanging();
					this._Libelle = value;
					this.SendPropertyChanged("Libelle");
					this.OnLibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ID_Media", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FK_ID_Media
		{
			get
			{
				return this._FK_ID_Media;
			}
			set
			{
				if ((this._FK_ID_Media != value))
				{
					this.OnFK_ID_MediaChanging(value);
					this.SendPropertyChanging();
					this._FK_ID_Media = value;
					this.SendPropertyChanged("FK_ID_Media");
					this.OnFK_ID_MediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ID_Chapitre", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FK_ID_Chapitre
		{
			get
			{
				return this._FK_ID_Chapitre;
			}
			set
			{
				if ((this._FK_ID_Chapitre != value))
				{
					this.OnFK_ID_ChapitreChanging(value);
					this.SendPropertyChanging();
					this._FK_ID_Chapitre = value;
					this.SendPropertyChanged("FK_ID_Chapitre");
					this.OnFK_ID_ChapitreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
