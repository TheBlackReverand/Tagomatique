//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Tagomatique.Data.Context
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class SQLCompactContext : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet SQLCompactContext à l'aide de la chaîne de connexion trouvée dans la section 'SQLCompactContext' du fichier de configuration d'application.
        /// </summary>
        public SQLCompactContext() : base("name=SQLCompactContext", "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet SQLCompactContext.
        /// </summary>
        public SQLCompactContext(string connectionString) : base(connectionString, "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet SQLCompactContext.
        /// </summary>
        public SQLCompactContext(EntityConnection connection) : base(connection, "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Chapitre> Chapitre
        {
            get
            {
                if ((_Chapitre == null))
                {
                    _Chapitre = base.CreateObjectSet<Chapitre>("Chapitre");
                }
                return _Chapitre;
            }
        }
        private ObjectSet<Chapitre> _Chapitre;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Dossier> Dossier
        {
            get
            {
                if ((_Dossier == null))
                {
                    _Dossier = base.CreateObjectSet<Dossier>("Dossier");
                }
                return _Dossier;
            }
        }
        private ObjectSet<Dossier> _Dossier;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Infos> Infos
        {
            get
            {
                if ((_Infos == null))
                {
                    _Infos = base.CreateObjectSet<Infos>("Infos");
                }
                return _Infos;
            }
        }
        private ObjectSet<Infos> _Infos;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Media> Media
        {
            get
            {
                if ((_Media == null))
                {
                    _Media = base.CreateObjectSet<Media>("Media");
                }
                return _Media;
            }
        }
        private ObjectSet<Media> _Media;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Signet> Signet
        {
            get
            {
                if ((_Signet == null))
                {
                    _Signet = base.CreateObjectSet<Signet>("Signet");
                }
                return _Signet;
            }
        }
        private ObjectSet<Signet> _Signet;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        internal ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;

        #endregion
        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Chapitre. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToChapitre(Chapitre chapitre)
        {
            base.AddObject("Chapitre", chapitre);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Dossier. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToDossier(Dossier dossier)
        {
            base.AddObject("Dossier", dossier);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Infos. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToInfos(Infos infos)
        {
            base.AddObject("Infos", infos);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Media. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToMedia(Media media)
        {
            base.AddObject("Media", media);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Signet. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToSignet(Signet signet)
        {
            base.AddObject("Signet", signet);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Tag. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        internal void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }

        #endregion
    }
    

    #endregion
    
    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Chapitre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Chapitre : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Chapitre.
        /// </summary>
        /// <param name="iD_Chapitre">Valeur initiale de la propriété ID_Chapitre.</param>
        /// <param name="debut">Valeur initiale de la propriété Debut.</param>
        /// <param name="fin">Valeur initiale de la propriété Fin.</param>
        /// <param name="fK_ID_Media">Valeur initiale de la propriété FK_ID_Media.</param>
        public static Chapitre CreateChapitre(global::System.Guid iD_Chapitre, global::System.String debut, global::System.String fin, global::System.Guid fK_ID_Media)
        {
            Chapitre chapitre = new Chapitre();
            chapitre.ID_Chapitre = iD_Chapitre;
            chapitre.Debut = debut;
            chapitre.Fin = fin;
            chapitre.FK_ID_Media = fK_ID_Media;
            return chapitre;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Chapitre
        {
            get
            {
                return _ID_Chapitre;
            }
            set
            {
                if (_ID_Chapitre != value)
                {
                    OnID_ChapitreChanging(value);
                    ReportPropertyChanging("ID_Chapitre");
                    _ID_Chapitre = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Chapitre");
                    OnID_ChapitreChanged();
                }
            }
        }
        private global::System.Guid _ID_Chapitre;
        partial void OnID_ChapitreChanging(global::System.Guid value);
        partial void OnID_ChapitreChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Debut
        {
            get
            {
                return _Debut;
            }
            set
            {
                OnDebutChanging(value);
                ReportPropertyChanging("Debut");
                _Debut = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Debut");
                OnDebutChanged();
            }
        }
        private global::System.String _Debut;
        partial void OnDebutChanging(global::System.String value);
        partial void OnDebutChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fin
        {
            get
            {
                return _Fin;
            }
            set
            {
                OnFinChanging(value);
                ReportPropertyChanging("Fin");
                _Fin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fin");
                OnFinChanged();
            }
        }
        private global::System.String _Fin;
        partial void OnFinChanging(global::System.String value);
        partial void OnFinChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Media
        {
            get
            {
                return _FK_ID_Media;
            }
            set
            {
                OnFK_ID_MediaChanging(value);
                ReportPropertyChanging("FK_ID_Media");
                _FK_ID_Media = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FK_ID_Media");
                OnFK_ID_MediaChanged();
            }
        }
        private global::System.Guid _FK_ID_Media;
        partial void OnFK_ID_MediaChanging(global::System.Guid value);
        partial void OnFK_ID_MediaChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Dossier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Dossier : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Dossier.
        /// </summary>
        /// <param name="iD_Dossier">Valeur initiale de la propriété ID_Dossier.</param>
        /// <param name="nom">Valeur initiale de la propriété Nom.</param>
        /// <param name="chemin">Valeur initiale de la propriété Chemin.</param>
        public static Dossier CreateDossier(global::System.Guid iD_Dossier, global::System.String nom, global::System.String chemin)
        {
            Dossier dossier = new Dossier();
            dossier.ID_Dossier = iD_Dossier;
            dossier.Nom = nom;
            dossier.Chemin = chemin;
            return dossier;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Dossier
        {
            get
            {
                return _ID_Dossier;
            }
            set
            {
                if (_ID_Dossier != value)
                {
                    OnID_DossierChanging(value);
                    ReportPropertyChanging("ID_Dossier");
                    _ID_Dossier = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Dossier");
                    OnID_DossierChanged();
                }
            }
        }
        private global::System.Guid _ID_Dossier;
        partial void OnID_DossierChanging(global::System.Guid value);
        partial void OnID_DossierChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Chemin
        {
            get
            {
                return _Chemin;
            }
            set
            {
                OnCheminChanging(value);
                ReportPropertyChanging("Chemin");
                _Chemin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Chemin");
                OnCheminChanged();
            }
        }
        private global::System.String _Chemin;
        partial void OnCheminChanging(global::System.String value);
        partial void OnCheminChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Infos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Infos : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Infos.
        /// </summary>
        /// <param name="version">Valeur initiale de la propriété Version.</param>
        public static Infos CreateInfos(global::System.String version)
        {
            Infos infos = new Infos();
            infos.Version = version;
            return infos;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Media")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Media : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Media.
        /// </summary>
        /// <param name="iD_Media">Valeur initiale de la propriété ID_Media.</param>
        /// <param name="nom">Valeur initiale de la propriété Nom.</param>
        /// <param name="relativeURL">Valeur initiale de la propriété RelativeURL.</param>
        /// <param name="fK_ID_Dossier">Valeur initiale de la propriété FK_ID_Dossier.</param>
        public static Media CreateMedia(global::System.Guid iD_Media, global::System.String nom, global::System.String relativeURL, global::System.Guid fK_ID_Dossier)
        {
            Media media = new Media();
            media.ID_Media = iD_Media;
            media.Nom = nom;
            media.RelativeURL = relativeURL;
            media.FK_ID_Dossier = fK_ID_Dossier;
            return media;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Media
        {
            get
            {
                return _ID_Media;
            }
            set
            {
                if (_ID_Media != value)
                {
                    OnID_MediaChanging(value);
                    ReportPropertyChanging("ID_Media");
                    _ID_Media = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Media");
                    OnID_MediaChanged();
                }
            }
        }
        private global::System.Guid _ID_Media;
        partial void OnID_MediaChanging(global::System.Guid value);
        partial void OnID_MediaChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelativeURL
        {
            get
            {
                return _RelativeURL;
            }
            set
            {
                OnRelativeURLChanging(value);
                ReportPropertyChanging("RelativeURL");
                _RelativeURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RelativeURL");
                OnRelativeURLChanged();
            }
        }
        private global::System.String _RelativeURL;
        partial void OnRelativeURLChanging(global::System.String value);
        partial void OnRelativeURLChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Dossier
        {
            get
            {
                return _FK_ID_Dossier;
            }
            set
            {
                OnFK_ID_DossierChanging(value);
                ReportPropertyChanging("FK_ID_Dossier");
                _FK_ID_Dossier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FK_ID_Dossier");
                OnFK_ID_DossierChanged();
            }
        }
        private global::System.Guid _FK_ID_Dossier;
        partial void OnFK_ID_DossierChanging(global::System.Guid value);
        partial void OnFK_ID_DossierChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Signet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Signet : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Signet.
        /// </summary>
        /// <param name="iD_Signet">Valeur initiale de la propriété ID_Signet.</param>
        /// <param name="duree">Valeur initiale de la propriété Duree.</param>
        /// <param name="libelle">Valeur initiale de la propriété Libelle.</param>
        /// <param name="fK_ID_Media">Valeur initiale de la propriété FK_ID_Media.</param>
        public static Signet CreateSignet(global::System.Guid iD_Signet, global::System.String duree, global::System.String libelle, global::System.Guid fK_ID_Media)
        {
            Signet signet = new Signet();
            signet.ID_Signet = iD_Signet;
            signet.Duree = duree;
            signet.Libelle = libelle;
            signet.FK_ID_Media = fK_ID_Media;
            return signet;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Signet
        {
            get
            {
                return _ID_Signet;
            }
            set
            {
                if (_ID_Signet != value)
                {
                    OnID_SignetChanging(value);
                    ReportPropertyChanging("ID_Signet");
                    _ID_Signet = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Signet");
                    OnID_SignetChanged();
                }
            }
        }
        private global::System.Guid _ID_Signet;
        partial void OnID_SignetChanging(global::System.Guid value);
        partial void OnID_SignetChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Duree
        {
            get
            {
                return _Duree;
            }
            set
            {
                OnDureeChanging(value);
                ReportPropertyChanging("Duree");
                _Duree = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Duree");
                OnDureeChanged();
            }
        }
        private global::System.String _Duree;
        partial void OnDureeChanging(global::System.String value);
        partial void OnDureeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Libelle
        {
            get
            {
                return _Libelle;
            }
            set
            {
                OnLibelleChanging(value);
                ReportPropertyChanging("Libelle");
                _Libelle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Libelle");
                OnLibelleChanged();
            }
        }
        private global::System.String _Libelle;
        partial void OnLibelleChanging(global::System.String value);
        partial void OnLibelleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Media
        {
            get
            {
                return _FK_ID_Media;
            }
            set
            {
                OnFK_ID_MediaChanging(value);
                ReportPropertyChanging("FK_ID_Media");
                _FK_ID_Media = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FK_ID_Media");
                OnFK_ID_MediaChanged();
            }
        }
        private global::System.Guid _FK_ID_Media;
        partial void OnFK_ID_MediaChanging(global::System.Guid value);
        partial void OnFK_ID_MediaChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Tag : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Tag.
        /// </summary>
        /// <param name="iD_Tag">Valeur initiale de la propriété ID_Tag.</param>
        /// <param name="libelle">Valeur initiale de la propriété Libelle.</param>
        public static Tag CreateTag(global::System.Guid iD_Tag, global::System.String libelle)
        {
            Tag tag = new Tag();
            tag.ID_Tag = iD_Tag;
            tag.Libelle = libelle;
            return tag;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Tag
        {
            get
            {
                return _ID_Tag;
            }
            set
            {
                if (_ID_Tag != value)
                {
                    OnID_TagChanging(value);
                    ReportPropertyChanging("ID_Tag");
                    _ID_Tag = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_Tag");
                    OnID_TagChanged();
                }
            }
        }
        private global::System.Guid _ID_Tag;
        partial void OnID_TagChanging(global::System.Guid value);
        partial void OnID_TagChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Libelle
        {
            get
            {
                return _Libelle;
            }
            set
            {
                OnLibelleChanging(value);
                ReportPropertyChanging("Libelle");
                _Libelle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Libelle");
                OnLibelleChanged();
            }
        }
        private global::System.String _Libelle;
        partial void OnLibelleChanging(global::System.String value);
        partial void OnLibelleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FK_ID_Media
        {
            get
            {
                return _FK_ID_Media;
            }
            set
            {
                OnFK_ID_MediaChanging(value);
                ReportPropertyChanging("FK_ID_Media");
                _FK_ID_Media = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FK_ID_Media");
                OnFK_ID_MediaChanged();
            }
        }
        private Nullable<global::System.Guid> _FK_ID_Media;
        partial void OnFK_ID_MediaChanging(Nullable<global::System.Guid> value);
        partial void OnFK_ID_MediaChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FK_ID_Chapitre
        {
            get
            {
                return _FK_ID_Chapitre;
            }
            set
            {
                OnFK_ID_ChapitreChanging(value);
                ReportPropertyChanging("FK_ID_Chapitre");
                _FK_ID_Chapitre = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FK_ID_Chapitre");
                OnFK_ID_ChapitreChanged();
            }
        }
        private Nullable<global::System.Guid> _FK_ID_Chapitre;
        partial void OnFK_ID_ChapitreChanging(Nullable<global::System.Guid> value);
        partial void OnFK_ID_ChapitreChanged();

        #endregion
    
    }

    #endregion
    
}
