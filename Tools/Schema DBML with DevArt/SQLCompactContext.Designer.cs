//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 22/11/2012 16:09:00
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Data;
using System.Linq;
using System.Data.Common;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata


#endregion

namespace Tagomatique.Data.Context
{

    #region SQLCompactContext

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    internal partial class SQLCompactContext : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new SQLCompactContext object.
        /// </summary>
        public SQLCompactContext() : 
                base(@"metadata=SQLCompactContext.csdl|SQLCompactContext.ssdl|SQLCompactContext.msl;provider=System.Data.SqlServerCe.3.5;provider connection string=""Data Source=C:\Tagomatique.sdf""", "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new SQLCompactContext object using the connection string found in the 'SQLCompactContext' section of the application configuration file.
        /// </summary>
        public SQLCompactContext(string connectionString) : 
                base(connectionString, "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new SQLCompactContext object.
        /// </summary>
        public SQLCompactContext(EntityConnection connection) : base(connection, "SQLCompactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Chapitre> Chapitre
        {
            get
            {
                if ((_Chapitre == null))
                {
                    _Chapitre = base.CreateObjectSet<Chapitre>("Chapitre");
                }
                return _Chapitre;
            }
        }
        private ObjectSet<Chapitre> _Chapitre;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Dossier> Dossier
        {
            get
            {
                if ((_Dossier == null))
                {
                    _Dossier = base.CreateObjectSet<Dossier>("Dossier");
                }
                return _Dossier;
            }
        }
        private ObjectSet<Dossier> _Dossier;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Infos> Infos
        {
            get
            {
                if ((_Infos == null))
                {
                    _Infos = base.CreateObjectSet<Infos>("Infos");
                }
                return _Infos;
            }
        }
        private ObjectSet<Infos> _Infos;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Media> Media
        {
            get
            {
                if ((_Media == null))
                {
                    _Media = base.CreateObjectSet<Media>("Media");
                }
                return _Media;
            }
        }
        private ObjectSet<Media> _Media;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Signet> Signet
        {
            get
            {
                if ((_Signet == null))
                {
                    _Signet = base.CreateObjectSet<Signet>("Signet");
                }
                return _Signet;
            }
        }
        private ObjectSet<Signet> _Signet;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Chapitre EntitySet.
        /// </summary>
        internal void AddToChapitre(Chapitre chapitre)
        {
            base.AddObject("Chapitre", chapitre);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Dossier EntitySet.
        /// </summary>
        internal void AddToDossier(Dossier dossier)
        {
            base.AddObject("Dossier", dossier);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Infos EntitySet.
        /// </summary>
        internal void AddToInfos(Infos infos)
        {
            base.AddObject("Infos", infos);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Media EntitySet.
        /// </summary>
        internal void AddToMedia(Media media)
        {
            base.AddObject("Media", media);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Signet EntitySet.
        /// </summary>
        internal void AddToSignet(Signet signet)
        {
            base.AddObject("Signet", signet);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tag EntitySet.
        /// </summary>
        internal void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }

        #endregion
    }

    #endregion

    #region Entity Classes

    #region Chapitre

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Chapitre in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID_Chapitre
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Chapitre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Chapitre : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Chapitre object.
        /// </summary>
        /// <param name="iD_Chapitre">Initial value of ID_Chapitre.</param>
        /// <param name="debut">Initial value of Debut.</param>
        /// <param name="fin">Initial value of Fin.</param>
        /// <param name="fK_ID_Media">Initial value of FK_ID_Media.</param>
        public static Chapitre CreateChapitre(global::System.Guid iD_Chapitre, string debut, string fin, global::System.Guid fK_ID_Media)
        {
            Chapitre chapitre = new Chapitre();
            chapitre.ID_Chapitre = iD_Chapitre;
            chapitre.Debut = debut;
            chapitre.Fin = fin;
            chapitre.FK_ID_Media = fK_ID_Media;
            return chapitre;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID_Chapitre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Chapitre
        {
            get
            {
                global::System.Guid value = _ID_Chapitre;
                OnGetID_Chapitre(ref value);
                return value;
            }
            set
            {
                if (_ID_Chapitre != value)
                {
                  OnID_ChapitreChanging(ref value);
                  ReportPropertyChanging("ID_Chapitre");
                  _ID_Chapitre = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_Chapitre");
                  OnID_ChapitreChanged();
              }
            }
        }
        private global::System.Guid _ID_Chapitre;
        partial void OnGetID_Chapitre(ref global::System.Guid value);
        partial void OnID_ChapitreChanging(ref global::System.Guid value);
        partial void OnID_ChapitreChanged();
    
        /// <summary>
        /// There are no comments for Debut in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Debut
        {
            get
            {
                string value = _Debut;
                OnGetDebut(ref value);
                return value;
            }
            set
            {
                if (_Debut != value)
                {
                  OnDebutChanging(ref value);
                  ReportPropertyChanging("Debut");
                  _Debut = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Debut");
                  OnDebutChanged();
              }
            }
        }
        private string _Debut;
        partial void OnGetDebut(ref string value);
        partial void OnDebutChanging(ref string value);
        partial void OnDebutChanged();
    
        /// <summary>
        /// There are no comments for Fin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Fin
        {
            get
            {
                string value = _Fin;
                OnGetFin(ref value);
                return value;
            }
            set
            {
                if (_Fin != value)
                {
                  OnFinChanging(ref value);
                  ReportPropertyChanging("Fin");
                  _Fin = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Fin");
                  OnFinChanged();
              }
            }
        }
        private string _Fin;
        partial void OnGetFin(ref string value);
        partial void OnFinChanging(ref string value);
        partial void OnFinChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for FK_ID_Media in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Media
        {
            get
            {
                global::System.Guid value = _FK_ID_Media;
                OnGetFK_ID_Media(ref value);
                return value;
            }
            set
            {
                if (_FK_ID_Media != value)
                {
                  OnFK_ID_MediaChanging(ref value);
                  ReportPropertyChanging("FK_ID_Media");
                  _FK_ID_Media = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FK_ID_Media");
                  OnFK_ID_MediaChanged();
              }
            }
        }
        private global::System.Guid _FK_ID_Media;
        partial void OnGetFK_ID_Media(ref global::System.Guid value);
        partial void OnFK_ID_MediaChanging(ref global::System.Guid value);
        partial void OnFK_ID_MediaChanged();

        #endregion
    }
    #endregion

    #region Dossier

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Dossier in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID_Dossier
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Dossier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Dossier : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Dossier object.
        /// </summary>
        /// <param name="iD_Dossier">Initial value of ID_Dossier.</param>
        /// <param name="nom">Initial value of Nom.</param>
        /// <param name="chemin">Initial value of Chemin.</param>
        public static Dossier CreateDossier(global::System.Guid iD_Dossier, string nom, string chemin)
        {
            Dossier dossier = new Dossier();
            dossier.ID_Dossier = iD_Dossier;
            dossier.Nom = nom;
            dossier.Chemin = chemin;
            return dossier;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID_Dossier in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Dossier
        {
            get
            {
                global::System.Guid value = _ID_Dossier;
                OnGetID_Dossier(ref value);
                return value;
            }
            set
            {
                if (_ID_Dossier != value)
                {
                  OnID_DossierChanging(ref value);
                  ReportPropertyChanging("ID_Dossier");
                  _ID_Dossier = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_Dossier");
                  OnID_DossierChanged();
              }
            }
        }
        private global::System.Guid _ID_Dossier;
        partial void OnGetID_Dossier(ref global::System.Guid value);
        partial void OnID_DossierChanging(ref global::System.Guid value);
        partial void OnID_DossierChanged();
    
        /// <summary>
        /// There are no comments for Nom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Nom
        {
            get
            {
                string value = _Nom;
                OnGetNom(ref value);
                return value;
            }
            set
            {
                if (_Nom != value)
                {
                  OnNomChanging(ref value);
                  ReportPropertyChanging("Nom");
                  _Nom = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Nom");
                  OnNomChanged();
              }
            }
        }
        private string _Nom;
        partial void OnGetNom(ref string value);
        partial void OnNomChanging(ref string value);
        partial void OnNomChanged();
    
        /// <summary>
        /// There are no comments for Chemin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Chemin
        {
            get
            {
                string value = _Chemin;
                OnGetChemin(ref value);
                return value;
            }
            set
            {
                if (_Chemin != value)
                {
                  OnCheminChanging(ref value);
                  ReportPropertyChanging("Chemin");
                  _Chemin = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Chemin");
                  OnCheminChanged();
              }
            }
        }
        private string _Chemin;
        partial void OnGetChemin(ref string value);
        partial void OnCheminChanging(ref string value);
        partial void OnCheminChanged();

        #endregion
    }
    #endregion

    #region Infos

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Infos in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Version
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Infos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Infos : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Infos object.
        /// </summary>
        /// <param name="version">Initial value of Version.</param>
        public static Infos CreateInfos(string version)
        {
            Infos infos = new Infos();
            infos.Version = version;
            return infos;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string Version
        {
            get
            {
                string value = _Version;
                OnGetVersion(ref value);
                return value;
            }
            set
            {
                if (_Version != value)
                {
                  OnVersionChanging(ref value);
                  ReportPropertyChanging("Version");
                  _Version = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Version");
                  OnVersionChanged();
              }
            }
        }
        private string _Version;
        partial void OnGetVersion(ref string value);
        partial void OnVersionChanging(ref string value);
        partial void OnVersionChanged();

        #endregion
    }
    #endregion

    #region Media

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Media in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID_Media
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Media")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Media : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Media object.
        /// </summary>
        /// <param name="iD_Media">Initial value of ID_Media.</param>
        /// <param name="nom">Initial value of Nom.</param>
        /// <param name="relativeURL">Initial value of RelativeURL.</param>
        /// <param name="fK_ID_Dossier">Initial value of FK_ID_Dossier.</param>
        public static Media CreateMedia(global::System.Guid iD_Media, string nom, string relativeURL, global::System.Guid fK_ID_Dossier)
        {
            Media media = new Media();
            media.ID_Media = iD_Media;
            media.Nom = nom;
            media.RelativeURL = relativeURL;
            media.FK_ID_Dossier = fK_ID_Dossier;
            return media;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID_Media in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Media
        {
            get
            {
                global::System.Guid value = _ID_Media;
                OnGetID_Media(ref value);
                return value;
            }
            set
            {
                if (_ID_Media != value)
                {
                  OnID_MediaChanging(ref value);
                  ReportPropertyChanging("ID_Media");
                  _ID_Media = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_Media");
                  OnID_MediaChanged();
              }
            }
        }
        private global::System.Guid _ID_Media;
        partial void OnGetID_Media(ref global::System.Guid value);
        partial void OnID_MediaChanging(ref global::System.Guid value);
        partial void OnID_MediaChanged();
    
        /// <summary>
        /// There are no comments for Nom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Nom
        {
            get
            {
                string value = _Nom;
                OnGetNom(ref value);
                return value;
            }
            set
            {
                if (_Nom != value)
                {
                  OnNomChanging(ref value);
                  ReportPropertyChanging("Nom");
                  _Nom = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Nom");
                  OnNomChanged();
              }
            }
        }
        private string _Nom;
        partial void OnGetNom(ref string value);
        partial void OnNomChanging(ref string value);
        partial void OnNomChanged();
    
        /// <summary>
        /// There are no comments for RelativeURL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string RelativeURL
        {
            get
            {
                string value = _RelativeURL;
                OnGetRelativeURL(ref value);
                return value;
            }
            set
            {
                if (_RelativeURL != value)
                {
                  OnRelativeURLChanging(ref value);
                  ReportPropertyChanging("RelativeURL");
                  _RelativeURL = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RelativeURL");
                  OnRelativeURLChanged();
              }
            }
        }
        private string _RelativeURL;
        partial void OnGetRelativeURL(ref string value);
        partial void OnRelativeURLChanging(ref string value);
        partial void OnRelativeURLChanged();
    
        /// <summary>
        /// There are no comments for FK_ID_Dossier in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Dossier
        {
            get
            {
                global::System.Guid value = _FK_ID_Dossier;
                OnGetFK_ID_Dossier(ref value);
                return value;
            }
            set
            {
                if (_FK_ID_Dossier != value)
                {
                  OnFK_ID_DossierChanging(ref value);
                  ReportPropertyChanging("FK_ID_Dossier");
                  _FK_ID_Dossier = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FK_ID_Dossier");
                  OnFK_ID_DossierChanged();
              }
            }
        }
        private global::System.Guid _FK_ID_Dossier;
        partial void OnGetFK_ID_Dossier(ref global::System.Guid value);
        partial void OnFK_ID_DossierChanging(ref global::System.Guid value);
        partial void OnFK_ID_DossierChanged();

        #endregion
    }
    #endregion

    #region Signet

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Signet in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID_Signet
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Signet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Signet : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Signet object.
        /// </summary>
        /// <param name="iD_Signet">Initial value of ID_Signet.</param>
        /// <param name="duree">Initial value of Duree.</param>
        /// <param name="libelle">Initial value of Libelle.</param>
        /// <param name="fK_ID_Media">Initial value of FK_ID_Media.</param>
        public static Signet CreateSignet(global::System.Guid iD_Signet, string duree, string libelle, global::System.Guid fK_ID_Media)
        {
            Signet signet = new Signet();
            signet.ID_Signet = iD_Signet;
            signet.Duree = duree;
            signet.Libelle = libelle;
            signet.FK_ID_Media = fK_ID_Media;
            return signet;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID_Signet in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Signet
        {
            get
            {
                global::System.Guid value = _ID_Signet;
                OnGetID_Signet(ref value);
                return value;
            }
            set
            {
                if (_ID_Signet != value)
                {
                  OnID_SignetChanging(ref value);
                  ReportPropertyChanging("ID_Signet");
                  _ID_Signet = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_Signet");
                  OnID_SignetChanged();
              }
            }
        }
        private global::System.Guid _ID_Signet;
        partial void OnGetID_Signet(ref global::System.Guid value);
        partial void OnID_SignetChanging(ref global::System.Guid value);
        partial void OnID_SignetChanged();
    
        /// <summary>
        /// There are no comments for Duree in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Duree
        {
            get
            {
                string value = _Duree;
                OnGetDuree(ref value);
                return value;
            }
            set
            {
                if (_Duree != value)
                {
                  OnDureeChanging(ref value);
                  ReportPropertyChanging("Duree");
                  _Duree = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Duree");
                  OnDureeChanged();
              }
            }
        }
        private string _Duree;
        partial void OnGetDuree(ref string value);
        partial void OnDureeChanging(ref string value);
        partial void OnDureeChanged();
    
        /// <summary>
        /// There are no comments for Libelle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Libelle
        {
            get
            {
                string value = _Libelle;
                OnGetLibelle(ref value);
                return value;
            }
            set
            {
                if (_Libelle != value)
                {
                  OnLibelleChanging(ref value);
                  ReportPropertyChanging("Libelle");
                  _Libelle = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Libelle");
                  OnLibelleChanged();
              }
            }
        }
        private string _Libelle;
        partial void OnGetLibelle(ref string value);
        partial void OnLibelleChanging(ref string value);
        partial void OnLibelleChanged();
    
        /// <summary>
        /// There are no comments for FK_ID_Media in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FK_ID_Media
        {
            get
            {
                global::System.Guid value = _FK_ID_Media;
                OnGetFK_ID_Media(ref value);
                return value;
            }
            set
            {
                if (_FK_ID_Media != value)
                {
                  OnFK_ID_MediaChanging(ref value);
                  ReportPropertyChanging("FK_ID_Media");
                  _FK_ID_Media = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FK_ID_Media");
                  OnFK_ID_MediaChanged();
              }
            }
        }
        private global::System.Guid _FK_ID_Media;
        partial void OnGetFK_ID_Media(ref global::System.Guid value);
        partial void OnFK_ID_MediaChanging(ref global::System.Guid value);
        partial void OnFK_ID_MediaChanged();

        #endregion
    }
    #endregion

    #region Tag

    /// <summary>
    /// There are no comments for Tagomatique.Data.Context.Tag in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID_Tag
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Tagomatique.Data.Context", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Tag : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="iD_Tag">Initial value of ID_Tag.</param>
        /// <param name="libelle">Initial value of Libelle.</param>
        public static Tag CreateTag(global::System.Guid iD_Tag, string libelle)
        {
            Tag tag = new Tag();
            tag.ID_Tag = iD_Tag;
            tag.Libelle = libelle;
            return tag;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID_Tag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_Tag
        {
            get
            {
                global::System.Guid value = _ID_Tag;
                OnGetID_Tag(ref value);
                return value;
            }
            set
            {
                if (_ID_Tag != value)
                {
                  OnID_TagChanging(ref value);
                  ReportPropertyChanging("ID_Tag");
                  _ID_Tag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_Tag");
                  OnID_TagChanged();
              }
            }
        }
        private global::System.Guid _ID_Tag;
        partial void OnGetID_Tag(ref global::System.Guid value);
        partial void OnID_TagChanging(ref global::System.Guid value);
        partial void OnID_TagChanged();
    
        /// <summary>
        /// There are no comments for Libelle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Libelle
        {
            get
            {
                string value = _Libelle;
                OnGetLibelle(ref value);
                return value;
            }
            set
            {
                if (_Libelle != value)
                {
                  OnLibelleChanging(ref value);
                  ReportPropertyChanging("Libelle");
                  _Libelle = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Libelle");
                  OnLibelleChanged();
              }
            }
        }
        private string _Libelle;
        partial void OnGetLibelle(ref string value);
        partial void OnLibelleChanging(ref string value);
        partial void OnLibelleChanged();
    
        /// <summary>
        /// There are no comments for FK_ID_Media in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> FK_ID_Media
        {
            get
            {
                global::System.Nullable<System.Guid> value = _FK_ID_Media;
                OnGetFK_ID_Media(ref value);
                return value;
            }
            set
            {
                if (_FK_ID_Media != value)
                {
                  OnFK_ID_MediaChanging(ref value);
                  ReportPropertyChanging("FK_ID_Media");
                  _FK_ID_Media = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FK_ID_Media");
                  OnFK_ID_MediaChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _FK_ID_Media;
        partial void OnGetFK_ID_Media(ref global::System.Nullable<System.Guid> value);
        partial void OnFK_ID_MediaChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnFK_ID_MediaChanged();
    
        /// <summary>
        /// There are no comments for FK_ID_Chapitre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> FK_ID_Chapitre
        {
            get
            {
                global::System.Nullable<System.Guid> value = _FK_ID_Chapitre;
                OnGetFK_ID_Chapitre(ref value);
                return value;
            }
            set
            {
                if (_FK_ID_Chapitre != value)
                {
                  OnFK_ID_ChapitreChanging(ref value);
                  ReportPropertyChanging("FK_ID_Chapitre");
                  _FK_ID_Chapitre = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FK_ID_Chapitre");
                  OnFK_ID_ChapitreChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _FK_ID_Chapitre;
        partial void OnGetFK_ID_Chapitre(ref global::System.Nullable<System.Guid> value);
        partial void OnFK_ID_ChapitreChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnFK_ID_ChapitreChanged();

        #endregion
    }
    #endregion

    #endregion
}
